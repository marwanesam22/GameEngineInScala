[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\madyelzainy\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\madyelzainy\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 217.375ms
[debug]       Load.loadUnit: defsScala took 0.5494ms
[debug] [Loading] Scanning directory C:\Users\madyelzainy\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\madyelzainy\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.0335 ms
[debug]           Load.resolveProject(global-plugins) took 71.0246ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\madyelzainy\.sbt\1.0\plugins, plugins: List(<none>))) took 135.0625ms
[debug] [Loading] Done in C:\Users\madyelzainy\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 168.9122ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4174ms
[debug]     Load.loadUnit(file:/C:/Users/madyelzainy/.sbt/1.0/plugins/, ...) took 404.6783ms
[debug]   Load.apply: load took 825.2014ms
[debug]   Load.apply: resolveProjects took 13.4784ms
[debug]   Load.apply: finalTransforms took 226.0442ms
[debug]   Load.apply: config.delegates took 43.4772ms
[debug]   Load.apply: Def.make(settings)... took 1947.9632ms
[debug]   Load.apply: structureIndex took 411.3967ms
[debug]   Load.apply: mkStreams took 3.667ms
[info] loading global plugins from C:\Users\madyelzainy\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 13148.8149ms
[debug]           Load.loadUnit: plugins took 62.2415ms
[debug]           Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\madyelzainy\IdeaProjects\untitled6\project
[debug]             Load.loadUnit: mkEval took 11.5214ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\madyelzainy\IdeaProjects\untitled6\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6922 ms
[info] loading settings for project untitled6-build from idea.sbt ...
[debug]               Load.resolveProject(untitled6-build) took 5.8085ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled6-build, base: C:\Users\madyelzainy\IdeaProjects\untitled6\project, plugins: List(<none>))) took 11.2588ms
[debug] [Loading] Done in C:\Users\madyelzainy\IdeaProjects\untitled6\project, returning: (untitled6-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6170.0579ms
[debug]           Load.loadUnit: cleanEvalClasses took 19.7411ms
[debug]         Load.loadUnit(file:/C:/Users/madyelzainy/IdeaProjects/untitled6/project/, ...) took 6254.7619ms
[debug]       Load.apply: load took 6259.77ms
[debug]       Load.apply: resolveProjects took 0.2929ms
[debug]       Load.apply: finalTransforms took 20.1189ms
[debug]       Load.apply: config.delegates took 0.6658ms
[debug]       Load.apply: Def.make(settings)... took 376.5327ms
[debug]       Load.apply: structureIndex took 72.6826ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\madyelzainy\IdeaProjects\untitled6\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 22096.8135ms
[debug]     Load.loadUnit: defsScala took 0.0156ms
[debug] [Loading] Scanning directory C:\Users\madyelzainy\IdeaProjects\untitled6
[debug]       Load.loadUnit: mkEval took 1.6462ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9556 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 115.5969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\madyelzainy\IdeaProjects\untitled6, plugins: List(<none>))) took 138.2646ms
[debug] [Loading] Done in C:\Users\madyelzainy\IdeaProjects\untitled6, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 7510.2628ms
[debug]     Load.loadUnit: cleanEvalClasses took 66.7978ms
[debug]   Load.loadUnit(file:/C:/Users/madyelzainy/IdeaProjects/untitled6/, ...) took 29688.0757ms
[debug] Load.apply: load took 29696.379ms
[debug] Load.apply: resolveProjects took 0.2712ms
[debug] Load.apply: finalTransforms took 114.2499ms
[debug] Load.apply: config.delegates took 0.7433ms
[debug] Load.apply: Def.make(settings)... took 388.6496ms
[debug] Load.apply: structureIndex took 77.6308ms
[debug] Load.apply: mkStreams took 0.0065ms
[info] set current project to untitled6 (in build file:/C:/Users/madyelzainy/IdeaProjects/untitled6/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61976 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61976, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled6 (in build file:/C:/Users/madyelzainy/IdeaProjects/untitled6/)
[debug] > Exec(idea-shell, None, None)
